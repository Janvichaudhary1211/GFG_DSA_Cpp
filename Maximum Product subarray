/*
Problem Statement:
Given an array arr[] that contains positive and negative integers (may contain 0 as well). Find the maximum product that we can get in a subarray of arr[].

Note: It is guaranteed that the output fits in a 32-bit integer.
*/
class Solution {
  public:
    // Function to find maximum product subarray
    int maxProduct(vector<int> &arr) {
      int prefix = 1;
      int suffix = 1;
      int maximum = INT_MIN;
      for(int i=0; i<arr.size(); i++){
          if(prefix == 0)
             prefix = 1;
          if(suffix == 0)
              suffix = 1;
         prefix = prefix * arr[i];
         suffix = suffix * arr[arr.size()-1-i];
         maximum = max(maximum, max(prefix , suffix));
      }
      return maximum;
    }
};
